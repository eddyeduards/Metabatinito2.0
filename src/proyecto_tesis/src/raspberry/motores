#!/usr/bin/env python
# license removed for brevity
import rospy
import time
import serial
import socket
import RPi.GPIO as GPIO

global velocidad1, velocidad2, velocidad3, velocidad4
velocidad1 = 0.0
velocidad2 = 0.0
velocidad3 = 0.0
velocidad4 = 0.0

def inicio():
    global velocidad1, velocidad2, velocidad3, velocidad4
    rospy.init_node('control_motores', anonymous = True)

    TCP_IP = "169.254.162.245"
    TCP_PORT1 = 5001
    TCP_PORT2 = 5002
    TCP_PORT3 = 5003
    TCP_PORT4 = 5004
    TCP_PORT5 = 5005
    TCP_PORT6 = 5006

    BUFFER_SIZE = 6

    s1 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s2 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s3 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s4 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s5 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s6 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    s1.connect((TCP_IP, TCP_PORT1))
    s2.connect((TCP_IP, TCP_PORT2))
    s3.connect((TCP_IP, TCP_PORT3))
    s4.connect((TCP_IP, TCP_PORT4))
    s5.connect((TCP_IP, TCP_PORT5))
    s6.connect((TCP_IP, TCP_PORT6))



    GPIO.setmode(GPIO.BOARD)
    GPIO.setwarnings(False)
    GPIO.setup(11, GPIO.OUT)
    GPIO.setup(12, GPIO.OUT)
    GPIO.setup(13, GPIO.OUT)
    GPIO.setup(15, GPIO.OUT)

    serial1 = serial.Serial('/dev/ttyUSB0',115200)
    serial2 = serial.Serial('/dev/ttyUSB1',115200)
    serial3 = serial.Serial('/dev/ttyUSB2',115200)
    serial4 = serial.Serial('/dev/ttyUSB3',115200)

    serial1.write(str(0)+"\n")
    serial2.write(str(0)+"\n")
    serial3.write(str(0)+"\n")
    serial4.write(str(0)+"\n")

    velocidad_lineal_anteriorx = 0
    velocidad_lineal_anteriory = 0
    velocidad_angular_anterior = 0

    lx = 0.225
    ly = 0.175
    r = 0.05

    GPIO.output(11,True)
    GPIO.output(12,True)
    GPIO.output(13,True)
    GPIO.output(15,True)
    time.sleep(0.1)
    GPIO.output(11,False)
    GPIO.output(12,False)
    GPIO.output(13,False)
    GPIO.output(15,False)
    time.sleep(0.1)
    GPIO.output(11,True)
    GPIO.output(12,True)
    GPIO.output(13,True)
    GPIO.output(15,True)
    time.sleep(3)

    w1 = "0.0"
    w2 = "0.0"
    w3 = "0.0"
    w4 = "0.0"


    while not rospy.is_shutdown():
        if(serial1.in_waiting>0):
            velocidad_1 = serial1.readline()
            velocidad1 = float(velocidad_1)

        else:
            serial1.write(w1+"\n")
            time.sleep(0.0001)


        if(serial2.in_waiting>0):
            velocidad_2 = serial2.readline()
            velocidad2 = float(velocidad_2)

        else:
            serial2.write(w2+"\n")
            time.sleep(0.0001)

        if(serial3.in_waiting>0):
            velocidad_3 = serial3.readline()
            velocidad3 = float(velocidad_3)

        else:
            serial3.write(w3+"\n")
            time.sleep(0.0001)

        if(serial4.in_waiting>0):
            velocidad_4 = serial4.readline()
            velocidad4 = float(velocidad_4)

        else:
            serial4.write(w4+"\n")
            time.sleep(0.0001)

        # Cinematica Directa
        Vlx = (velocidad1 + velocidad2 + velocidad3 + velocidad4)*r/4
        Vly = (-velocidad1 + velocidad2 + velocidad3 - velocidad4)*r/4
        Wz = (- velocidad1 + velocidad2 - velocidad3 + velocidad4)*r /(4*(lx+ly))

        # Posicion Lineal
        x = Vlx + velocidad_lineal_anteriorx
        velocidad_lineal_anteriorx = x
        Pos_x = x*0.001

        y = Vly + velocidad_lineal_anteriory
        velocidad_lineal_anteriory = y

	Pos_y = y*0.001

        #Posicion Angular
        w = Wz + velocidad_angular_anterior
        velocidad_angular_anterior = w
        Pos_ang = w*0.001

        if Vlx < 0.001:
            Vlx = 0.0

        if Vly < 0.001:
            Vly = 0.0

        if Wz < 0.00001:
            Wz = 0.0

        if Pos_x < 0.001:
            Pos_x = 0.0

        if Pos_y < 0.001:
            Pos_y = 0.0

        if Pos_ang < 0.001:
            Pos_ang = 0.0

        #Convertir en String

        Vlx = '%.5s' % str(Vlx).zfill(5)
	Vly = '%.5s' % str(Vly).zfill(5)
        Wz = '%.5s' % str(Wz).zfill(5)
        Pos_x = '%.5s' % str(Pos_x).zfill(5)
        Pos_y = '%.5s' % str(Pos_y).zfill(5)
        Pos_ang = '%.5s' % str(Pos_ang).zfill(5)

        s1.send(Vlx + "\n")
        s2.send(Vly + "\n")
        s3.send(Wz + "\n")
        s4.send(Pos_x + "\n")
        s5.send(Pos_y + "\n")
        s6.send(Pos_ang + "\n")

        w1 = s1.recv(BUFFER_SIZE)
        w2 = s2.recv(BUFFER_SIZE)
        w3 = s3.recv(BUFFER_SIZE)
        w4 = s4.recv(BUFFER_SIZE)

    time.sleep(3)
    GPIO.output(11,False)
    GPIO.output(12,False)
    GPIO.output(13,False)
    GPIO.output(15,False)
    time.sleep(1)
    GPIO.output(11,True)
    GPIO.output(12,True)
    GPIO.output(13,True)
    GPIO.output(15,True)
    time.sleep(1)

if __name__ == '__main__':
    try:
        inicio()
    except rospy.ROSInterruptException:
        pass





